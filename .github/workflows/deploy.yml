name: Deploy

on: 
  workflow_dispatch:
    inputs:
      release_tag_name_input:
        description: "Release Tag Name <X.X.X>"
        required: true
  release:
    types:
      - prereleased


jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      package_version: ${{ steps.create_tags.outputs.package_version }}
      tag_version: ${{ steps.create_tags.outputs.tag_version }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Create Deploy version vars
        id: create_tags
        run: |
          if ! [[ "${{ github.event_name }}" -eq "release" ]]; then
            case "${RELEASE_TAG_NAME_INPUT:0:1}" in
              v)
                echo "RELEASE_NAME=${RELEASE_TAG_NAME_INPUT:1}" >> $GITHUB_ENV
                echo "RELEASE_TAG_NAME=$RELEASE_TAG_NAME_INPUT" >> $GITHUB_ENV
                echo "::set-output name=package_version::${RELEASE_TAG_NAME_INPUT:1}"
                echo "::set-output name=tag_version::$RELEASE_TAG_NAME_INPUT"
                ;;
              [0-9])
                echo "RELEASE_NAME=$RELEASE_TAG_NAME_INPUT" >> $GITHUB_ENV
                echo "RELEASE_TAG_NAME=v$RELEASE_TAG_NAME_INPUT" >> $GITHUB_ENV
                echo "::set-output name=package_version::$RELEASE_TAG_NAME_INPUT"
                echo "::set-output name=tag_version::v$RELEASE_TAG_NAME_INPUT"
                ;;
              *)
                exit 1
                ;;
            esac
          else
            TAG_VERSION=$(echo ${{ github.ref }} | cut -d "/" -f 3)
            PKG_VERSION=${TAG_VERSION:1}

            echo "::set-output name=package_version::$PKG_VERSION"
            echo "::set-output name=tag_version::$TAG_VERSION"
          fi
        env:
          RELEASE_TAG_NAME_INPUT: ${{ github.event.inputs.release_tag_name_input }}


  snap:
    name: Deploy Snap
    runs-on: ubuntu-latest
    needs: setup
    env:
      PKG_VERSION: ${{ needs.setup.outputs.package_version }}
      TAG_VERSION: ${{ needs.setup.outputs.tag_version }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Install Snap
        if: false
        uses: samuelmeuli/action-snapcraft@v1
        with:
          snapcraft_token: ${{ secrets.SNAP_TOKEN }}

      - name: setup
        run: mkdir dist

      - name: get snap package
        uses: Xotl/cool-github-releases@v1
        with:
          mode: download
          tag_name: ${{ env.TAG_VERSION }}
          assets: bitwarden_${{ env.PKG_VERSION }}_amd64.snap|./dist/bitwarden_${{ env.PKG_VERSION }}_amd64.snap
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: test
        run: ls -alht dist

      - name: Deploy to Snap Store
        if: false
        run: |
          snapcraft upload dist/bitwarden_${{ env.PACKAGE_VERSION }}_amd64.snap --release stable
          snapcraft logout


  choco:
    name: Deploy Choco
    runs-on: windows-latest
    needs: setup
    env:
      PKG_VERSION: ${{ needs.setup.outputs.package_version }}
      TAG_VERSION: ${{ needs.setup.outputs.tag_version }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v2

      - name: Setup Chocolatey
        if: false
        run: choco apikey --key $env:CHOCO_API_KEY --source https://push.chocolatey.org/
        env:
          CHOCO_API_KEY: ${{ secrets.CHOCO_API_KEY }}

      - name: make dist dir 
        shell: pwsh
        run: New-Item -ItemType directory -Path ./dist

      - name: Get nupkg
        uses: Xotl/cool-github-releases@v1
        with:
          mode: download
          tag_name: ${{ env.TAG_VERSION }}
          assets: bitwarden.${{ env.PKG_VERSION }}.nupkg|./dist/bitwarden.${{ env.PKG_VERSION }}.nupkg
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Push to Chocolatey
        if: false
        shell: pwsh
        run: |
          cd dist
          choco push


  macos:
    runs-on: macos-latest
    needs: setup
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: make target directory
        run: mkdir -p dist/mas

      - name: Get mac release asset
        uses: Xotl/cool-github-releases@v1
        with:
          mode: download
          tag_name: ${{ env.TAG_VERSION }}
          assets: Bitwarden-${{ env.PACKAGE_VERSION }}.pkg|./dist/mas/Bitwarden-${{ env.PACKAGE_VERSION }}.pkg
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy to App Store
        if: false
        run: npm run upload:mas
        env:
          APPLE_ID_USERNAME: ${{ secrets.APPLE_ID_USERNAME }}
          APPLE_ID_PASSWORD: ${{ secrets.APPLE_ID_PASSWORD }}

  publish:
    name: Publish Release
    runs-on: ubuntu-latest
    needs: 
      - setup
      - snap
      - choco
      - macos
    env:
      RELEASE_VERSION: ${{ needs.setup.outputs.release_version }}
      TAG_VERSION: ${{ needs.setup.outputs.tag_version }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Publish release
        run: |
          hub release edit \
            --draft=false \
            --message "" \
            $TAG_VERSION
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
