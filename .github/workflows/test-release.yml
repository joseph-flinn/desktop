name: Test Release

on:
  workflow_dispatch:
    inputs:
      release_tag_name_input:
        description: 'Release Tag Name <X.X.X>'
        required: true
      browser_extension_ref:
        description: 'Browser Extension ref (defaults to `master`):'
        default: master


jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      release_upload_url: ${{ steps.create_release.outputs.upload_url }}
      package_version: ${{ steps.create_tags.outputs.package_version }}
      tag_version: ${{ steps.create_tags.outputs.tag_version }}
    steps:
      - name: Checkout repo
        uses: actions/checkout@v2

      - name: Create Release Vars
        id: create_tags
        run: |
          case "${RELEASE_TAG_NAME_INPUT:0:1}" in
            v)
              echo "RELEASE_NAME=${RELEASE_TAG_NAME_INPUT:1}" >> $GITHUB_ENV
              echo "RELEASE_TAG_NAME=$RELEASE_TAG_NAME_INPUT" >> $GITHUB_ENV
              echo "::set-output name=package_version::${RELEASE_TAG_NAME_INPUT:1}"
              echo "::set-output name=tag_version::$RELEASE_TAG_NAME_INPUT"
              ;;
            [0-9])
              echo "RELEASE_NAME=$RELEASE_TAG_NAME_INPUT" >> $GITHUB_ENV
              echo "RELEASE_TAG_NAME=v$RELEASE_TAG_NAME_INPUT" >> $GITHUB_ENV
              echo "::set-output name=package_version::$RELEASE_TAG_NAME_INPUT"
              echo "::set-output name=tag_version::v$RELEASE_TAG_NAME_INPUT"
              ;;
            *)
              exit 1
              ;;
          esac
        env:
          RELEASE_TAG_NAME_INPUT: ${{ github.event.inputs.release_tag_name_input }}

      - name: Create Draft Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ env.RELEASE_TAG_NAME }}
          release_name: ${{ env.RELEASE_NAME }}
          draft: true
          prerelease: false


  linux:
    runs-on: ubuntu-latest
    needs: setup
    env:
      PKG_VERSION: ${{ needs.setup.outputs.package_version }}
      TAG_VERSION: ${{ needs.setup.ouputs.tag_version }}
    steps:
      - name: Create test snap
        run: touch bitwarden_${{ env.PKG_VERSION }}_amd64.snap

      - name: Create test nupkg
        run: touch bitwarden.${{ env.PKG_VERSION }}.nupkg

      - name: Create test pkg
        run: touch Bitwarden-${{ env.PKG_VERSION }}.pkg

      - name: Upload test snap
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.setup.outputs.release_upload_url }}
          asset_name: bitwarden_${{ env.PKG_VERSION }}_amd64.snap
          asset_path: ./bitwarden_${{ env.PKG_VERSION }}_amd64.snap
          asset_content_type: application

      - name: Upload Apple Store release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.setup.outputs.release_upload_url }}
          asset_name: bitwarden.${{ env.PKG_VERSION }}.nupkg
          asset_path: ./bitwarden.${{ env.PKG_VERSION }}.nupkg
          asset_content_type: application

      - name: Upload Apple Store release asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.setup.outputs.release_upload_url }}
          asset_name: Bitwarden-${{ env.PKG_VERSION }}.pkg
          asset_path: ./Bitwarden-${{ env.PKG_VERSION }}.pkg
          asset_content_type: application
